JavaScript разрешает вложенность функций и предоставляет вложенной функции
полный доступ ко всем переменным и функциям, объявленным внутри внешней
функции (и другим переменным и функции, к которым имеет доступ эта внешняя
функция).

Однако, внешняя функция не имеет доступа к переменным и функциям, объявленным
во внутренней функции. Это обеспечивает своего рода инкапсуляцию для
переменных внутри вложенной функции.

Поскольку вложенная функция имеет доступ к scope внешней функции,
переменные и функции, объявленные во внешней функции, будет продолжать
существовать и после её выполнения для вложенной функции,
если на них и на неё сохранился доступ (имеется ввиду, что переменные,
объявленные во внешней функции, сохраняются, только если внутренняя
функция обращается к ним).

Замыкание создаётся, когда вложенная функция как-то стала доступной в неком
scope вне внешней функции.

Важный момент:
    Если закрытая функция определяет переменную с тем же именем,
    что и имя переменной во внешней области, нет способа снова ссылаться
    на переменную во внешней области.
