В JavaScript класс – это разновидность функции.

Точно также, как определяем функции, определяются классы с помощью:
class declarations и class expressions.

Первый способ определения класса — class declaration (объявление класса).
Для этого необходимо воспользоваться ключевым словом class и указать имя класса:
    class Rectangle {
      constructor(height, width) {
        this.height = height;
        this.width = width;
      }
    }
Разница между объявлением функции (function declaration) и объявлением класса
(class declaration) в том, что объявление функции совершает подъём (hoisting),
в то время как объявление класса — нет. Поэтому вначале необходимо объявить
ваш класс и только затем работать с ним:
    class Rectangle {}
    var p = new Rectangle();

Второй способ определения класса — class expression (выражение класса).
Можно создавать именованные и безымянные выражения. В первом случае имя
выражения класса находится в локальной области видимости класса и
может быть получено через свойства самого класса, а не его экземпляра.
    // безымянный
    var Rectangle = class {
      constructor(height, width) {
        this.height = height;
        this.width = width;
      }
    };
    console.log(Rectangle.name);
    // отобразится: "Rectangle"

    // именованный
    var Rectangle = class Rectangle2 {
      constructor(height, width) {
        this.height = height;
        this.width = width;
      }
    };
    console.log(Rectangle.name);
    // отобразится: "Rectangle2"

Мы даже можем динамически создавать классы «по запросу»:
    function makeClass(phrase) {
      // объявляем класс и возвращаем его
      return class {
        sayHi() {
          alert(phrase);
        };
      };
    }

Так же классы можно создавать через объявление нового экземпляра класса Object:
var person = new Object({
    ...
    })

Тело класса — это часть кода, заключённая в фигурные скобки {}.
Здесь вы можете объявлять методы и конструктор класса.

Метод constructor — специальный метод, необходимый для создания и
инициализации объектов, созданных, с помощью класса.
В классе может быть только один метод с именем constructor.

Поля класса — это переменные, содержащие определенную информацию.
Поля могут быть разделены на две группы:
- Поля экземпляров класса
- Поля самого класса (статические)

Поля также имеют два уровня доступа:
- Открытые (публичные): поля доступны как внутри класса, так и в экзмеплярах
- Частные (приватные): поля доступны только внутри класса

Для того, чтобы сделать поле частным, перед его названием следует поставить
символ #, например, #name:
    class User {
        #name

        constructor(name) {
            this.#name = name
        }

        getName() {
            return this.#name
        }
    }

    const user = new User('Печорин')
    user.getName() // Печорин
    user.#name // SyntaxError

Для создания статических полей используется ключевое слово static
перед названием поля:
    class User {
        static TYPE_ADMIN = 'admin'
        static TYPE_REGULAR = 'regular'
        ...
    }

    const admin = new User('Администратор сайта', User.TYPE_ADMIN)
Для доступа к статическим полям следует использовать название класса
и название свойства

Иногда статические поля также являются частью внутренней реализации класса.
Для инкапсуляции таких полей можно сделать их частными.
Для этого следует перед названием поля поставить префикс #:
    class User {
        static #TYPE_ADMIN = 'admin'
        static #TYPE_REGULAR = 'regular'
        ...
    }

Поля содержат данные. Возможность изменять данные обеспечивается специальными
функциями, являющимися частью класса: методами.
JavaScript поддерживает как методы экземпляров класса, так и статические методы.
Методы также могут быть частным.

Классы являются лишь надстройкой над прототипным наследованием.
Любой класс — это функция, создающая экземпляр при вызове конструктора.
