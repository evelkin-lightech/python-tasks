В JavaScript есть три области видимости:
- глобальная,
- область видимости функции
- блочная

Область видимости переменной – это участок исходного кода программы,
в котором переменные и функции видны и их можно использовать.

Глобальную область видимости иначе ещё называют кодом верхнего уровня.
Переменная, объявленная вне функции или блока, называется глобальной.
Глобальная переменная доступна в любом месте исходного кода:
    var num = 5;

    function foo() {
        console.log(num);
    }

    foo();
    console.log(num);

Переменная, объявленная внутри функции, называется локальной.
Локальная переменная доступна в любом месте внутри тела функции,
в которой она была объявлена. Локальная переменная создаётся каждый раз
заново при вызове функции и уничтожается при выходе из неё
(при завершении работы функции):
    function foo() {
        var num = 5;
        console.log(num);
    }

    foo();
    console.log(num); => undefined
Локальная переменная имеет преимущество перед глобальной переменной
с тем же именем, это означает, что внутри функции будет использоваться
локальная переменная, а не глобальная.

Переменная, объявленная внутри блока с помощью ключевого слова let,
называется блочной. Блочная переменная доступна в любом месте внутри блока,
в котором она была объявлена:
    let num = 0;
    {
        let num = 5;
        console.log(num);     // 5
        {
            let num = 10;
            console.log(num);   // 10
        }
        console.log(num);     // 5
    }
    console.log(num);       // 0
Для «var» не существует блочной области видимости.
Область видимости переменных var ограничивается либо функцией, либо,
если переменная глобальная, то скриптом. Такие переменные доступны за
пределами блока:
    if (true) {
        var test = true;
    }
    alert(test);
Аналогично для циклов: var не может быть блочной или локальной внутри цикла.
Если блок кода находится внутри функции, то var становится локальной
переменной в этой функции

«var» допускает повторное объявление.
«var» обрабатываются в начале запуска функции
