Числа с фиксированной точностью – это числа типа Decimal,
которые при вычислениях используют фиксированное количество знаков после запятой.

Тип Decimal – это специально разработанный класс (начиная с версии Python 2.4).

Класс Decimal реализован в модуле decimal

Чтобы создать объект класса Decimal используется конструктор этого класса.
Конструктор получает строку с числом, в котором указывается заданная точность,
например:
    Decimal('0.002') # фиксированная точность 3 знака после запятой
    Decimal('0.23') # фиксированная точность 2 знака после запятой
    Decimal('0.00001') # фиксированная точность 5 знаков после запятой
    Decimal(str(0.2))

Используя метод from_float класса Decimal не всегда удается получить
фиксированную точность:
    x1 = Decimal.from_float(2.48) 2.479999999999999982236431605997495353221893310546875
    x2 = Decimal.from_float(2.5) 2.5

Бывают случаи, когда точность в программе нужно задать для всех операций
текущего потока управления:
    # задание точности 6 знаков после запятой
    import decimal

    decimal.getcontext().prec=6
    b = Decimal(5)/Decimal(13)
    print('b = ', b) # b = 0.384615
В глобальная точность для класса Decimal задается с помощью функции getcontext(),
которая возвращает объект контекста в этом модуле. Точность задается в
текущем потоке управления.
