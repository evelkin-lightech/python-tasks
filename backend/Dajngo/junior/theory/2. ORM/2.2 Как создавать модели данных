Модель является единственным источником информации о ваших данных.
Она содержит основные поля и поведение данных, которые вы храните.
Как правило, каждая модель отображается в одну таблицу базы данных.

Каждая модель представляет собой класс Python, который является
подклассом django.db.models.Model.

Каждый атрибут модели представляет поле базы данных.

При этом Django предоставляет вам автоматически сгенерированный API доступа к
базе данных

После того, как вы определили свои модели, вам нужно сообщить Django,
что вы собираетесь использовать эти модели. Сделайте это, отредактировав
файл настроек и изменив параметр INSTALLED_APPS, чтобы добавить имя модуля,
который содержит ваш models.py.

Когда вы добавляете новые приложения в INSTALLED_APPS, обязательно запустите
manage.py migrate, при необходимости сначала сделав миграцию для них с
помощью manage.py makemigrations.

Самая важная часть модели - и единственная необходимая часть модели -
это список полей базы данных, которые она определяет. Поля определяются
атрибутами класса.

Каждое поле в модели должно быть экземпляром соответствующего класса Field.
Django использует типы классов полей для определения нескольких вещей:

- Тип столбца, который сообщает базе данных, какой тип данных хранить
  (например, INTEGER, VARCHAR, TEXT).
- HTML-код по умолчанию widget, используемый при визуализации поля формы
  (например, <input type = "text">, <select>).
- Минимальные требования проверки, используемые в админке Django и в
  автоматически сгенерированных формах.

Каждое поле принимает определенный набор специфичных для его типа аргументов