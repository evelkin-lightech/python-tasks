Контекстный менеджмент - это система управления ресурсами.

В программах часто используются такие ресурсы, как файлы или базы данных.
Но эти ресурсы ограничены в доступе. Поэтому основная проблема заключается в том,
чтобы освободить их после использования. Если они не будут освобождены, это
приведет к утечке ресурсов и может вызвать замедление работы системы или ее сбой.
Было бы хорошо, если бы у пользователя был механизм для автоматического захвата
и освобождения ресурсов. В Python это может быть достигнуто с помощью контекстных
менеджеров, которые облегчают правильную обработку ресурсов.

Предположим, у вас есть две связанные операции, которые вы хотите исполнить в
паре, поместив между ними блок кода. Менеджеры контекста позволяют сделать
именно это.

Самый популярный пример использования менеджера контекста - выражение with.
Классический случай - операции открытия файла.

Решаемые задачи:
- чтение/запись в файлы
- обращение по soccet
- обращение к БД

Пример:
    with open('file', 'w') as f:
        f.write('Hello!')
Код выше открывает файл, записывает в него данные и закрывает файл после этого.
При возникновении ошибки при записи данных в файл менеджер контекста попробует
его закрыть.

Основное преимущество использования with - это гарантия закрытия ресурса вне
зависимости от того, как будет завершён вложенный код.

