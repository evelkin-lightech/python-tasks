В Python много отличных доступных «из коробки» модулей.
Один из самых полезных — collections.
Он содержит «специализированные типы для создания контейнеров»,
являющихся альтернативами универсальным dict, list, set и tuple.

Класс defaultdict() представляет собой словарь со значениями по умолчанию.
Defaultdict является подклассом встроенного класса dict().
Он переопределяет один метод и добавляет одну доступную для записи
переменную экземпляра. Остальная функциональность такая же, как и для
класса dict()

Если обратиться к обычному словарю по ключу, которого в нем ещё нет, мы получим
исключение KeyError. Если нет нужды отлавливать исключение,
достаточно использовать альтернативный вариант словаря – collections.defaultdict.
Соответствующему конструктору в качестве аргумента передается тип
элемента по умолчанию.

Обычные словари имеют метод setdefault(), который позволяет добиться
того же результата, но его использование делает программный код менее
наглядным и замедляет исполнение.

Примеры:
    from collections import defaultdict

    a = defaultdict(str)
    a['name'] = 'Sam'
    a['surname'] = 'Fisher'
    a['age'] => ''

    from collections import defaultdict

    my_default_dict = defaultdict(int)
    for letter in 'the red fox ran as fast as it could':
        my_default_dict[letter] += 1
    print(my_default_dict)