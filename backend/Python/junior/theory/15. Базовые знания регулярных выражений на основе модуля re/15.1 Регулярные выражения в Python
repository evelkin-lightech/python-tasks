Регулярное выражение — это строка, задающая шаблон поиска подстрок в тексте.

Регулярное выражение, состоит из обычных символов и специальных командных
последовательностей:
    \d      любая цифра,
    \d+     последовательность из одной или более цифр
    \d{5}   последовательсноть из 5 цифр

Плохо написанные регулярные выражения работают медленно.
Их зачастую очень сложно читать, особенно если регулярка написана не лично
тобой пять минут назад.
Очень часто даже небольшое изменение задачи (того, что требуется найти)
приводит к значительному изменению выражения. Поэтому про регулярки часто говорят,
что это write only code (код, который только пишут с нуля, но не читают и не правят).
А также шутят: Некоторые люди, когда сталкиваются с проблемой, думают
«Я знаю, я решу её с помощью регулярных выражений.» Теперь у них две проблемы.

Функции для работы с регулярками находятся в модуле re.

re.search(pattern, string)	            Найти в строке string первую строчку,
                                        подходящую под шаблон pattern;

re.fullmatch(pattern, string)	        Проверить, подходит ли строка string
                                        под шаблон pattern;

re.split(pattern, string, maxsplit=0)	Аналог str.split(), только
                                        разделение происходит по подстрокам,
                                        подходящим под шаблон pattern;

re.findall(pattern, string)	            Найти в строке string все
                                        непересекающиеся шаблоны pattern;

re.finditer(pattern, string)	        Итератор всем непересекающимся
                                        шаблонам pattern в строке string
                                        (выдаются match-объекты);

re.sub(pattern, repl, string, count=0)  Заменить в строке string все
                                        непересекающиеся шаблоны pattern на repl;

