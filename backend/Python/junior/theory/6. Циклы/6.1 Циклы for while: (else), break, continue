В Python есть два типа циклов:
- for
- while

Цикл for используется в том случае, когда необходимо выполнить некоторую
часть кода до тех пор, пока не будет выполнено заданное условие.
Цикл for также называют циклом c предусловием. Лучше использовать цикл for,
если количество итераций известно заранее:
    for i in item:
        do_something

Функция range() используется для генерации последовательности чисел.
Если мы передадим range(10), она сгенерирует числа от 0 до 9:
    for i in range(10):
        print(i,end = ' ')

Python позволяет нам использовать оператор else с циклом for,
который может быть выполнен только тогда, когда все итерации исчерпаны.
Здесь мы должны заметить, что если цикл содержит какой-либо оператор break,
то оператор else не будет выполнен:
    for i in range(0,5):
        print(i)
    else:
        print("for loop completely exhausted, since there is no break.")

Цикл while позволяет выполнять часть кода до тех пор, пока заданное условие
не станет ложным. Он также известен как цикл с предварительной проверкой условия.
Его можно рассматривать как повторяющийся оператор if.
Когда мы не знаем количество итераций, цикл while является наиболее эффективным.
    while True:
        do_something

Мы можем изменить обычную последовательность выполнения цикла while
с помощью оператора управления циклом:
    1. Оператор continue передает управление в начало цикла:
        i = 0
        word = 'javatpoint'
        while i < len(word):
            if word[i] == 'a' or word[i] == 't':
                i += 1
                continue
            print('Current Letter :', a[i])
            i += 1
    2. Оператор break выводит управление из цикла:
        i = 0
        word = 'javatpoint'
        while i < len(word):
            if word[i] == 't':
                i += 1
                break
            print('Current Letter :', word[i])
            i += 1
    3. Оператор pass используется для объявления пустого цикла.
    Он также используется для определения пустого класса, функции и
    оператора управления, т е используется как некоторая "заглушка":
        word = 'javatpoint'
        i = 0
        while i < len(word):
            i += 1
            pass
        print('Value of i :', i)

Если условие, заданное в цикле while, никогда не станет ложным,
то цикл while никогда не завершится, и он превратится в бесконечный цикл while.

Python позволяет нам также использовать оператор else с циклом while.
Блок else выполняется, когда условие, заданное в операторе while,
становится ложным:
    i = 1
    while(i <= 5):
        print(i)
        i = i + 1
    else:
        print("The while loop exhausted")
Если цикл while прервать с помощью оператора break,
то блок else не будет выполнен.
