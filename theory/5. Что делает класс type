Возвращает тип объекта и является собственным метаклассом языка Python.

- синтаксис:
1. type(object)
2. type(name, bases, dict)

- параметры:
1. object - объект, тип которого определяется
2. name - имя для создаваемого типа
3. bases - кортеж с родительскими классами
4. dict - словарь, будет являться пространством имён для тела класса

- возвращаемое значение:
1. тип объекта, при вызове с одним аргументом,
2. объект нового типа при вызове класса с тремя аргументами.

Класс type() с одним аргументом object возвращает тип объекта.
Возвращаемое значение - это как правило, тот же объект, что и возвращаемый object.__class__.

Класс type() с тремя аргументами вернет объект нового типа.
Это по сути динамическая форма инструкции class, ее еще называют метакласс.
Другими словами класс type(), вызванный с тремя аргументами на самом деле является метаклассом!
Класс type() это метакласс, который Python внутренне использует для создания всех классов.

Все, с чем имеем дело в Python, является объектом.
Сюда входят функции и классы целые числа, строки и т.д.
Все они объекты. И все они созданы из класса.

Понятия класс и тип по сути являются синонимами.
Пользовательские типы данных могут быть сконструированы налету,
во время исполнения, при помощи вызова type() с тремя аргументами или
определены в коде, например при помощи инструкции class.

Важно понимать, что тип, как и другие сущности в Python, тоже является объектом.
