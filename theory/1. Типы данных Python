В Python есть несколько стандартных типов данных:

- Numbers (числа)
- Strings (строки)
- Lists (списки)
- Dictionaries (словари)
- Tuples (кортежи)
- Sets (множества)
- Boolean (логический тип данных)

Эти типы данных можно, в свою очередь, классифицировать по нескольким признакам:

- изменяемые (списки, словари и множества)
- неизменяемые (числа, строки и кортежи)
- упорядоченные (списки, кортежи, строки и словари)
- неупорядоченные (множества)

*----- Числа - numbers (int / float) -----*
С числами можно выполнять:
- математические операции,
- операции сравнения,
- округления.
Для более сложных математических операций в Python есть модуль math.

*----- Строки - string -----*
Строки это последовательность символов, заключенная в кавычки.
Это неизменяемый упорядоченный тип данных.
Строки можно суммировать (конкатанация).
Строки можно умножать на число (получим строку n-раз)
Имеется возможно обращаться по индексу к символам (отчет идет с 0).
Имеется возможность делать срезы срок (указываем диапазон).
Имеется возможность получить длину строки (len).
Некоторые методы для обработки строк:
- uppercase (весь регистр заглавный)
- lowercase (весь регистр строчный)
- swapcase (инверсия регистров строки)
- capitalize (1 символ будет верхнего регистра)
- count (количество вхождений/повторений символа или строки)
- find (покажет позицию для 1 символа подстроки для первого совпадения)
- startwith (начинается строка с определенного символа - boolean) можно передавать несколько значений (кортеж)
- endwith (заканчивается строка с определенного символа - boolean) можно передавать несколько значений (кортеж)
- replace (замена последовательности на другую последовательность)
- strip (позволяет избавиться от специальных символов в начале и конце строки) по умолчанию убирает пробельные символы (\t\n\r\f\v)
- lstrip (убирает спец символы только слева строки)
- rstrip (убирает спец символы только справа строки)
- split (разбивает строку на части используя символ) возвращает список

*----- Список - list -----*
Это последовательность элементов, разделенных между собой запятой и заключенных в квадратные скобки.
Это изменяемый упорядоченный тип данных.
Имеется возможность обращаться к элементам списка по индексу.
Можно создавать список списков.
- reverse (инвертирует список в обратном порядке)
- len (количество элементов списка)
- sorted (сортировка списков)
- join (собирает список строк в строку, используя символ разделения)
- append (добавлет элемент в конце списка)
- extend (объединение списков) меняет 1 список, добавляя к нему другой
- pop (удаляет элемент, который соответствует номеру в списке) возвращает этот элемент. Без указания номера удаляется последний элемент.
- remove (удаляет указанный эллемент не возвращая его)
- index (используется для проверки порядкового номера элемента в списке)
- insert (позволяет вставить элемент в указанном месте)
- sort (сортирует список на месте, меняя список)

*----- Словари - dictionary -----*
Это изменяемый упорядоченный тип данных.
- данные в словаре - это пары ключ: значение
- доступ к значениям осуществляется по ключу, а не по номеру, как в списках
- данные в словаре упорядочены по порядку добавления элементов
- так как словари изменяемы, то элементы словаря можно менять, добавлять, удалять
ключ должен быть объектом неизменяемого типа: число, строка, кортеж
- значение может быть данными любого типа
- sorted (возвращает новый отсортированный словарь по ключу)
- clear (очищает словарь)
- copy (создает полную копию словаря)
- get (запрашивает ключ словаря) если его нет - вернется None
- setdefault (ищет ключ словаря) если его нет - создаст ключ со значением None
- keys (выводит ключи словаря)
- values (выводит значения ключей словаря)
- items (выводит пару ключ-значение словаря)
- del (удаляет ключ-значение словаря)
- update (позволяет добавлять значения словаря в другой словарь)

Конструктор позволяет создать словарь несколькими способами:
- r1 = dict(model='4451', ios='15.4')
- r1 = dict([('model', '4451'), ('ios', '15.4')])
- d_keys = ['hostname', 'location', 'vendor', 'model', 'ios', 'ip']
  r1 = dict.fromkeys(d_keys)

*----- Кортежи - tuples -----*
Это последовательность элементов, которые разделены между собой запятой и заключены в скобки.
Это неизменяемый упорядоченный тип данных.
- к объектам в кортеже можно обращаться по порядковому номеру

*----- Множества - sets -----*
Это изменяемый неупорядоченный тип данных.
- в множестве всегда содержатся только уникальные элементы
- это последовательность элементов, которые разделены между собой запятой и заключены в фигурные скобки
- с помощью множества можно легко убрать повторяющиеся элементы
- add (добавляет элемент в мнежество)
- discard (удаляет элмент без генерации ошибки в случае его отстутствия)
- clear (отчищает множество)
- union (объединение множеств) - так же оператор |
- intersection (пересчечение множеств) - так же оператор &
- set() - создает множество

*----- Булевы значения - bool -----*
Булевы значения в Python это две константы True и False.
В Python истинными и ложными значениями считаются:
- истинное значение:
  - любое ненулевое число
  - любая непустая строка
  - любой непустой объект
- ложное значение:
  - 0
  - None
  - пустая строка
  - пустой объект
- bool (для проверки булевого значения)
